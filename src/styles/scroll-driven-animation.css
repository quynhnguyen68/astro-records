@layer base, components;

@supports (view-timeline: --works) {
	/* Hide warning when native view-timeline support detected */
	.warning {
		display: none;
	}

	/* Animation bumps up the z-index, to make sure it’s on top */
	@keyframes adjust-z-index {
		0% {
			z-index: 1;
		}
		50% {
			z-index: 100; /* When at the center, be on top */
		}
		100% {
			z-index: 1;
		}
	}

	/* Animation that rotates the cover */
	@keyframes rotate-cover {
		0% {
			transform: translateX(-100%) rotateY(-45deg);
		}
		35% {
			transform: translateX(0) rotateY(-45deg);
		}
		50% {
			transform: rotateY(0deg) translateZ(1em) scale(1.5);
		}
		65% {
			transform: translateX(0) rotateY(45deg);
		}
		100% {
			transform: translateX(100%) rotateY(45deg);
		}
	}

	.cards li {	
		/* Track this element as it intersects the scrollport */
		view-timeline-name: --li-in-and-out-of-view;
		view-timeline-axis: inline;

		/* Link an animation to the established view-timeline and have it run during the contain phase */
		animation: linear adjust-z-index both;
		animation-duration: auto;
		animation-timeline: --li-in-and-out-of-view;
		animation-range: contain 0% contain 100%; /* For Canary */

		/* Make the 3D stuff work… */
		perspective: 40em;

		position: relative;
		z-index: 1;
		will-change: z-index;

		user-select: none;
	}

	.cards li > img {
		/* Link an animation to the established view-timeline (of the parent li) and have it run during the contain phase */
		animation: linear rotate-cover both;
		animation-duration: auto;
		animation-timeline: --li-in-and-out-of-view;
		animation-range: contain 0% contain 100%;

		/* Prevent FOUC */
		transform: translateX(-100%) rotateY(-45deg);

		will-change: transform;
	}
}

@layer base {
	* {
		box-sizing: border-box;
		padding: 0;
		margin: 0;
	}

	:root {
		--cover-size: 15rem;
	}

	@media (max-width: 800px) {
		:root {
			--cover-size: 9rem;
		}
	}

	@media (max-width: 500px) {
		:root {
			--cover-size: 6rem;
		}
	}
	
	html, body {
		height: 100%;
		width: 100%;
		color: #ccc;
		background: #111;
		text-align: center;
	}

	body {
		font-family: sans-serif;

		display: flex;
		flex-direction: column;
		gap: 1em;
		padding: 1em;
	}
	
	@supports (place-content: safe center) {
		body {
			place-content: safe center;
		}
	}
	
	a { 
		color: papayawhip;
	}
	
	footer {
		font-style: italic;
		margin-top: 1em;
	}

	.cards {
		list-style: none;
		overflow-x: scroll;
		width: 100%;
		white-space: nowrap;

		outline: 1px solid #333;
		background: rgba(0 0 0 / 0.5);
	}
	
	.cards:focus {
		outline-color: #666;
	}
	
	/* only enable snapping when not dragging round*/
	.cards:not(.active) {
		scroll-snap-type: x mandatory;
	}

	.cards li {
		display: inline-block;
		width: var(--cover-size);
		height: var(--cover-size);
		scroll-snap-align: center;
	}

	.cards li img {
		dislay: block;
		width: var(--cover-size);
		height: var(--cover-size);

		-webkit-box-reflect: below 0.5em
			linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.25));
	}

	.cards {
		min-height: calc(var(--cover-size) * 2.5);

		max-width: calc(var(--cover-size) * 6);
		margin: 0 auto;
  		padding: calc(var(--cover-size) / 3 * 2) 0;
	}
	
	.cards li:first-of-type {
		margin-left: calc(50% - var(--cover-size) / 2);
	}
	.cards li:last-of-type {
		margin-right: calc(50% - var(--cover-size) / 2);
	}
}

@layer components {
	@layer warning {
		/* Show warning for browsers without support */
		.warning {
			padding: 1em;
			border: 1px solid black;
			z-index: 9999;
			color: black;
			background: rgba(255 255 225 / 0.9);
			z-index: 10001;
			
			width: max-content;
			margin: 0 auto;
		}
		
		:is(
			.warning:hover,
			.warning:has(:focus-within)
		) {
			opacity: 1;
		}

		.warning > :first-child {
			margin-top: 0;
		}

		.warning > :last-child {
			margin-bottom: 0;
		}

		.warning a {
			color: blue;
		}

		.warning--info {
			border: 1px solid #123456;
			background: rgba(205 230 255 / 0.8);
		}
	}
	
	@layer debug {
		#debug {
			position: absolute;
			top: 1em;
			left: 1em;
		}
		#debug::after {
			content: " Show Debug";
			margin-left: 1.5em;
			color: white;
			white-space: nowrap;
		}

		#debug:checked + .cards {
			border: 1px solid lime;
		}

		#debug:checked + .cards li {
			text-align: center;
			color: white;
			border: 1px solid blue;
		}

		#debug:checked + .cards li::before {
			content: attr(id);
			display: block;
			position: absolute;
			inset: 0;
			line-height: var(--cover-size);
			opacity: 0.5;
		}

		#debug:checked + .cards li img {
			opacity: 0.5;
		}
	}
}